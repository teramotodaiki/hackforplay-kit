



◆ 設計とか思いついたことを適当に書き殴るアレ

/----------/----------/----------/----------/----------/----------/----------/----------/

とりあえず東方っぽい STG を作る
弾幕 STG を基盤にすれば割となんでも対応できそう（横シューは地味にキツイかも）

/----------/----------/----------/----------/----------/----------/----------/----------/

ユーザーが使用する機能は、

Class.Method

みたいな形式で
C# の 静的メソッドに近い感じ

/----------/----------/----------/----------/----------/----------/----------/----------/

英語の変数名を直感的に理解するのは難しいだろうから、ある程度は日本語でも扱えるようにする

barrage = new Barrage();
Function(barrage);

みたいなのを、

Barrage.New('名前')
Function('名前')

という感じにできる限りする
（ただこれ学習的にはどうなのか疑問）

/----------/----------/----------/----------/----------/----------/----------/----------/


関数を（少しだけ）読みやすくする

Func(x, y, width, height, a, b)

とか引数が多い上に入力時補間ないとマジでゴミだから

Func(x, y)(width, height)(a, b)

みたいに使う内容で区切る
正直これで可読性が上がるのかは謎だしパフォーマンスもヤバイかも（試してない）
あと self = this みたいな処理で無駄に行数が増えるわネスト深くなるわ開発者殺しではある

/----------/----------/----------/----------/----------/----------/----------/----------/



メソッドも UCC の方が伝わりやすい？


get, set はダメだと思ってたけど IE9 以上なら対応してるっぽい？


/----------/----------/----------/----------/----------/----------/----------/----------/


Barrage.loopTime
count が一定を超えたら 0 に

Barrage.endTime = 0

// これで通常のままでも違和感のないように
Barrage.restartTime = 0


/----------/----------/----------/----------/----------/----------/----------/----------/

読みやすさ重視で全部これにする

◆ 関数
AaaBbbCcc

◆ メンバ
aaa_bbb_ccc


/----------/----------/----------/----------/----------/----------/----------/----------/


弾幕の生成は色々考えたけどピヨ初心者でもできるような形式にならなかった
function を打ち込ませる時点でアレな気がするからアロー関数使いたい

開発サイドで色んな種類の弾幕を用意して、そのパラメーターを書き換えるとか
他の方法で補った方がよさそう

/----------/----------/----------/----------/----------/----------/----------/----------/


$('canvas')[0].getContext('2d').imageSmoothingEnabled = false
false


/----------/----------/----------/----------/----------/----------/----------/----------/

ユーザーが扱う Vec2 は配列にする
Vec2(x, y) -> [x, y]
